import React, { useState, useEffect, useRef } from 'react';
import '../styles/profile.css'; 
import Photo from '../img/27685d3c5ffe8936e872afffa3ed6625.jpg'

function Profile() {
  const [activeSection, setActiveSection] = useState('portfolio'); // –£—Å—Ç–∞–Ω–æ–≤–∏–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ 'portfolio'
  const [username, setUsername] = useState(''); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—á—Ç—ã
  const handleSectionChange = (section) => {
    setActiveSection(section);
  };
  
  const [messages, setMessages] = useState([]);
    const [input, setInput] = useState('');
    const ws = useRef(null);
    const userId = useRef(Date.now() + Math.random().toString());

    useEffect(() => {
      const token = localStorage.getItem('token');
      if (token) {
        console.log('JWT Token:', token); // –í—ã–≤–æ–¥ —Å–∞–º–æ–≥–æ —Ç–æ–∫–µ–Ω–∞
        try {
          const payload = token.split('.')[1];
          const decodedPayload = JSON.parse(atob(payload));
          console.log('Decoded token payload:', decodedPayload);
          
          // –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–æ—á—Ç—ã –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ '@'
          const email = decodedPayload.sub; 
          setUsername(email.split('@')[0]); // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞:', error);
        }
      }

        // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ WebSocket-—Å–µ—Ä–≤–µ—Ä—É
        ws.current = new WebSocket('ws:http://26.188.13.76:8080');

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        ws.current.onmessage = (event) => {
            try {
                const parsedData = JSON.parse(event.data); // –ü–∞—Ä—Å–∏–º JSON
                console.log("Received message from server:", parsedData); // –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                if (parsedData.type === 'message') {
                    const messageData = parsedData.data; // –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –∫–ª–∏–µ–Ω—Ç–æ–º
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø—É—Å—Ç–æ–µ –∏ —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º
                    if (messageData && messageData.text) {
                        setMessages(prevMessages => [...prevMessages, messageData]); // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
                    } else {
                        console.error("–ü–æ–ª—É—á–µ–Ω–æ –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:", messageData);
                    }
                }
            } catch (error) {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
            }
        };

        // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ WebSocket
        return () => ws.current.close();
    }, []);

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    const sendMessage = () => {
        if (input.trim()) {
            const message = {
                id: Date.now(),
                userId: userId.current,
                text: input,
            };
            ws.current.send(JSON.stringify(message)); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
            setMessages(prevMessages => [...prevMessages, message]); // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–≤–æ–π —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
            setInput(''); // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
        }
    };

    const deleteProfile = () => {
      const confirmation = window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å?');
      if (confirmation) {
        // –õ–æ–≥–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è (–º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–∑–æ–≤ API)
        console.log('–ü—Ä–æ—Ñ–∏–ª—å —É–¥–∞–ª–µ–Ω');
      }
    };


    const handleFileUpload = (e) => {
      const file = e.target.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = () => {
          const fileMessage = {
            id: Date.now(),
            userId: userId.current,
            file: {
              name: file.name,
              type: file.type,
              content: reader.result, // Base64 –∫–æ–Ω—Ç–µ–Ω—Ç —Ñ–∞–π–ª–∞
            },
          };
          // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ —á–µ—Ä–µ–∑ WebSocket
          ws.current.send(JSON.stringify({ type: 'file', data: fileMessage }));
          setMessages((prevMessages) => [...prevMessages, fileMessage]); // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–∞–π–ª–æ–º
        };
        reader.readAsDataURL(file); // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∫–∞–∫ Base64
      }
    };
    
  // –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è —Å–µ–∫—Ü–∏–∏ "–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ"
  const renderPortfolio = () => (
    <div>
      <p>–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å –≤–∞—à–∏ —Ä–∞–±–æ—Ç—ã.</p>
      {/* –í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–ª–∏ —Ñ–æ—Ä–º –∑–¥–µ—Å—å */}
    </div>
  );

  // –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è —Å–µ–∫—Ü–∏–∏ "–ü—Ä–æ–µ–∫—Ç—ã"
  const renderProjects = () => (
    <div>
      <p>–ó–¥–µ—Å—å –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å –¥–µ—Ç–∞–ª–∏ –≤–∞—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤.</p>
      {/* –î–æ–±–∞–≤—å—Ç–µ —Ñ–æ—Ä–º—ã –∏–ª–∏ –¥—Ä—É–≥—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é */}
    </div>
  );

  // –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è —Å–µ–∫—Ü–∏–∏ "–°–æ–æ–±—â–µ–Ω–∏—è"
  const renderMessages = () => (
    <div className="renderMessages">
      <div className="chat-box">
        {messages.map((msg) => (
          <div
            key={msg.id}
            className={`message ${msg.userId === userId.current ? 'sent' : 'received'}`}
          >
            {msg.text && <p>{msg.text}</p>} {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è */}
            {msg.file && (
              <div>
                {msg.file.type.startsWith('image/') ? (
                  <img
                    src={msg.file.content}
                    alt={msg.file.name}
                    style={{ maxWidth: '200px', borderRadius: '5px', marginTop: '5px' }}
                  />
                ) : (
                  <a href={msg.file.content} download={msg.file.name}>
                    {msg.file.name}
                  </a>
                )}
              </div>
            )}
          </div>
        ))}
      </div>
      <div className="btnInput">
        <input
          type="text"
          value={input}
          onChange={(e) => setInput(e.target.value)}
          onKeyPress={(e) => (e.key === 'Enter' ? sendMessage() : null)}
          placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
        />
        <input
          type="file"
          accept="image/*, .pdf, .docx, .txt" // –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã —Ñ–∞–π–ª–æ–≤
          onChange={handleFileUpload}
          style={{ display: 'none' }}
          id="fileInput"
        />
        <label htmlFor="fileInput" className="fileUploadButton">
          üìé
        </label>
        <button onClick={sendMessage}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
      </div>
    </div>
  );
  
  return (
    <div className='profile-page'>
      <div className='profileData'>
        <div className='basePofInfo'>
          <div className='profPhoto'>
          <img src={Photo}  alt="Photo" />
          </div>
          <p className='profName'>{username || '–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'}</p> {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}          <div className='profPhone'>
            <label>
              <input type="text" readOnly />
            </label>
          </div>
          <button className="deleteProfileBtn" onClick={deleteProfile}>
            –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
          </button>
        </div>

        <div className='navegPage'>
          <nav className="profile_nav">
            <button 
              onClick={() => handleSectionChange('portfolio')}
              style={{ fontWeight: activeSection === 'portfolio' ? 'bold' : 'normal' }} // –£—Å–ª–æ–≤–Ω—ã–π —Å—Ç–∏–ª—å
            >
              Your portfolio
            </button>
            <button 
              onClick={() => handleSectionChange('projects')}
              style={{ fontWeight: activeSection === 'projects' ? 'bold' : 'normal' }} // –£—Å–ª–æ–≤–Ω—ã–π —Å—Ç–∏–ª—å
            >
              Your details
            </button>
            <button 
              onClick={() => handleSectionChange('messages')}
              style={{ fontWeight: activeSection === 'messages' ? 'bold' : 'normal' }} // –£—Å–ª–æ–≤–Ω—ã–π —Å—Ç–∏–ª—å
            >
              Messages
            </button>
          </nav>
          <div className='pageInProf'>
            {activeSection === 'portfolio' && renderPortfolio()}
            {activeSection === 'projects' && renderProjects()}
            {activeSection === 'messages' && renderMessages()}
          </div>
        </div>
      </div>
    </div>
  );
}

export default Profile;
